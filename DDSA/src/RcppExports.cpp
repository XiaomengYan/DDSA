// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <RcppGSL.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// GrLassoCpp
arma::mat GrLassoCpp(arma::mat Z, double lambdainvL);
RcppExport SEXP _DDSA_GrLassoCpp(SEXP ZSEXP, SEXP lambdainvLSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< double >::type lambdainvL(lambdainvLSEXP);
    rcpp_result_gen = Rcpp::wrap(GrLassoCpp(Z, lambdainvL));
    return rcpp_result_gen;
END_RCPP
}
// ProxGrLassoCpp
arma::mat ProxGrLassoCpp(double lambda1, double lambda2, arma::mat WtY, List WtWList, List BtBList, arma::mat Omega);
RcppExport SEXP _DDSA_ProxGrLassoCpp(SEXP lambda1SEXP, SEXP lambda2SEXP, SEXP WtYSEXP, SEXP WtWListSEXP, SEXP BtBListSEXP, SEXP OmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type lambda1(lambda1SEXP);
    Rcpp::traits::input_parameter< double >::type lambda2(lambda2SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type WtY(WtYSEXP);
    Rcpp::traits::input_parameter< List >::type WtWList(WtWListSEXP);
    Rcpp::traits::input_parameter< List >::type BtBList(BtBListSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega(OmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(ProxGrLassoCpp(lambda1, lambda2, WtY, WtWList, BtBList, Omega));
    return rcpp_result_gen;
END_RCPP
}
// MatGrLassoCpp
arma::mat MatGrLassoCpp(arma::mat Z, double etainL, int p, int q);
RcppExport SEXP _DDSA_MatGrLassoCpp(SEXP ZSEXP, SEXP etainLSEXP, SEXP pSEXP, SEXP qSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< double >::type etainL(etainLSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    rcpp_result_gen = Rcpp::wrap(MatGrLassoCpp(Z, etainL, p, q));
    return rcpp_result_gen;
END_RCPP
}
// CV_PCTrainingErrCpp
double CV_PCTrainingErrCpp(arma::mat U, arma::vec TrainIndex, List SNeList, std::vector<arma::mat> AtA, std::vector<arma::mat> AtY, int p, int q);
RcppExport SEXP _DDSA_CV_PCTrainingErrCpp(SEXP USEXP, SEXP TrainIndexSEXP, SEXP SNeListSEXP, SEXP AtASEXP, SEXP AtYSEXP, SEXP pSEXP, SEXP qSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type U(USEXP);
    Rcpp::traits::input_parameter< arma::vec >::type TrainIndex(TrainIndexSEXP);
    Rcpp::traits::input_parameter< List >::type SNeList(SNeListSEXP);
    Rcpp::traits::input_parameter< std::vector<arma::mat> >::type AtA(AtASEXP);
    Rcpp::traits::input_parameter< std::vector<arma::mat> >::type AtY(AtYSEXP);
    Rcpp::traits::input_parameter< int >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type q(qSEXP);
    rcpp_result_gen = Rcpp::wrap(CV_PCTrainingErrCpp(U, TrainIndex, SNeList, AtA, AtY, p, q));
    return rcpp_result_gen;
END_RCPP
}
// ADAMCpp
Rcpp::List ADAMCpp(arma::vec TrainIndex, int R, double eta1, double eta2, List SNeList, List AtAList, List AtYList, arma::mat Omega);
RcppExport SEXP _DDSA_ADAMCpp(SEXP TrainIndexSEXP, SEXP RSEXP, SEXP eta1SEXP, SEXP eta2SEXP, SEXP SNeListSEXP, SEXP AtAListSEXP, SEXP AtYListSEXP, SEXP OmegaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type TrainIndex(TrainIndexSEXP);
    Rcpp::traits::input_parameter< int >::type R(RSEXP);
    Rcpp::traits::input_parameter< double >::type eta1(eta1SEXP);
    Rcpp::traits::input_parameter< double >::type eta2(eta2SEXP);
    Rcpp::traits::input_parameter< List >::type SNeList(SNeListSEXP);
    Rcpp::traits::input_parameter< List >::type AtAList(AtAListSEXP);
    Rcpp::traits::input_parameter< List >::type AtYList(AtYListSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Omega(OmegaSEXP);
    rcpp_result_gen = Rcpp::wrap(ADAMCpp(TrainIndex, R, eta1, eta2, SNeList, AtAList, AtYList, Omega));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP _rcpp_module_boot_spline_class();
RcppExport SEXP _rcpp_module_boot_wavelet_class();

static const R_CallMethodDef CallEntries[] = {
    {"_DDSA_GrLassoCpp", (DL_FUNC) &_DDSA_GrLassoCpp, 2},
    {"_DDSA_ProxGrLassoCpp", (DL_FUNC) &_DDSA_ProxGrLassoCpp, 6},
    {"_DDSA_MatGrLassoCpp", (DL_FUNC) &_DDSA_MatGrLassoCpp, 4},
    {"_DDSA_CV_PCTrainingErrCpp", (DL_FUNC) &_DDSA_CV_PCTrainingErrCpp, 7},
    {"_DDSA_ADAMCpp", (DL_FUNC) &_DDSA_ADAMCpp, 8},
    {"_rcpp_module_boot_spline_class", (DL_FUNC) &_rcpp_module_boot_spline_class, 0},
    {"_rcpp_module_boot_wavelet_class", (DL_FUNC) &_rcpp_module_boot_wavelet_class, 0},
    {NULL, NULL, 0}
};

RcppExport void R_init_DDSA(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
